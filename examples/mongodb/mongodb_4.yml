!benchmark
id: 4
name: mongodb
rounds: 1
endable: false

providers:
 - &ec2 !provider
    name: aws-ec2
    credentialPath: AwsCredentials.properties

#tipos de instancia oferecidas pelo provedores de nuvem
virtualMachineTypes:    
 - &m3_medium !virtualMachineType
    providerProfile: m3.medium
    provider: *ec2
 - &m3_large !virtualMachineType
    providerProfile: m3.large
    provider: *ec2
 - &m3_xlarge !virtualMachineType
    providerProfile: m3.xlarge
    provider: *ec2
 - &m3_2xlarge !virtualMachineType
    providerProfile: m3.2xlarge
    provider: *ec2
 - &c3_large !virtualMachineType
    providerProfile: c3.large
    provider: *ec2
 - &c3_xlarge !virtualMachineType
    providerProfile: c3.xlarge
    provider: *ec2
 - &c3_2xlarge !virtualMachineType
    providerProfile: c3.2xlarge
    provider: *ec2

scriptlets:
 - &start_mongodb_config !scriptlet
   id: 1
   scripts:
     - "sudo ps -aux | grep mongo | awk '{print $2}' | xargs sudo kill -9;"
     - 'sudo rm -rf /data/configdb/; sudo rm -rf /data/db; echo '
     - 'sudo mkdir -p /data/configdb/; sudo mkdir -p  /data/db; echo '
     - 'sudo mongod --config /etc/mongodb/mongod.conf --bind_ip $HOSTNAME; echo '
     - 'sudo mongod --config /etc/mongodb/mongoc.conf --bind_ip $HOSTNAME; echo '
     - 'sudo mongos --configdb ${privateIpAddress}:27019 --config /etc/mongodb/mongos.conf --bind_ip $HOSTNAME; echo'
 - &start_mongodb !scriptlet
   id: 2
   scripts:
     - "sudo ps -aux | grep mongo | awk '{print $2}' | xargs sudo kill -9;"
     - 'sudo rm -rf /data/db; echo '
     - 'sudo mkdir -p  /data/db; echo '
     - 'sudo mongod --config /etc/mongodb/mongod.conf --bind_ip $HOSTNAME; echo'
     - 'sudo mongos --configdb ${scenarioScope.metric(mongodb1).privateIpAddress}:27019 --config /etc/mongodb/mongos.conf --bind_ip $HOSTNAME; echo '
 - &execute !scriptlet
   id: 3
   scripts:
     - 'sudo service nginx stop; echo '
     - 'sudo sed -i "/server .*\;/d" /usr/local/nginx/nginx.conf; echo '
     - 'sudo sed -i "s;\(least_conn\;\);\1\n        server ${scenarioScope.metric(mongodb1).privateIpAddress}:27018\;;g" /usr/local/nginx/nginx.conf; echo '
     - 'sudo sed -i "s;\(least_conn\;\);\1\n        server ${scenarioScope.metric(mongodb2).privateIpAddress}:27018\;;g" /usr/local/nginx/nginx.conf; echo '
     - 'sudo sed -i "s;\(least_conn\;\);\1\n        server ${scenarioScope.metric(mongodb3).privateIpAddress}:27018\;;g" /usr/local/nginx/nginx.conf; echo '
     - 'sudo sed -i "s;\(least_conn\;\);\1\n        server ${scenarioScope.metric(mongodb4).privateIpAddress}:27018\;;g" /usr/local/nginx/nginx.conf; echo '
     - 'sudo service nginx start; echo '
     - 'mongo --eval "sh.status()"; echo '
     - 'mongo --eval "sh.addShard(\"${scenarioScope.metric(mongodb1).privateIpAddress}:27017\")"; echo '
     - 'mongo --eval "sh.addShard(\"${scenarioScope.metric(mongodb2).privateIpAddress}:27017\")"; echo '
     - 'mongo --eval "sh.addShard(\"${scenarioScope.metric(mongodb3).privateIpAddress}:27017\")"; echo '
     - 'mongo --eval "sh.addShard(\"${scenarioScope.metric(mongodb4).privateIpAddress}:27017\")"; echo '
     - 'mongo --eval "sh.enableSharding(\"ycsb\")"; echo '
     - 'mongo --eval "sh.shardCollection(\"ycsb.usertable\", {_id:1})"; echo '
     - 'mongo --eval "sh.status()"; echo '
     - "~/execute.sh ${scenarioScope.name}"
     - 'mongo --eval "sh.status()"; echo '
     - 'mongo ycsb --eval "db.usertable.count()"; echo'
 - &nada !scriptlet
   id: 4
   scripts:
     - "echo "

virtualMachines:
  - &nginx !virtualMachine
   id: 1
   providerId: us-east-1/i-d2b44655
   type: *c3_2xlarge
   name: crawler
   scripts:
     submit_workload : *execute

scenarios:
 !foreach
  list: c3_large,c3_xlarge,c3_2xlarge,m3_medium,m3_large,m3_xlarge,m3_2xlarge,c3_large,c3_xlarge,c3_2xlarge,m3_medium,m3_large,m3_xlarge,m3_2xlarge,c3_large,c3_xlarge,c3_2xlarge,m3_medium,m3_large,m3_xlarge,m3_2xlarge
  var: profile
  statement:
  - !scenario
    name: 2_$[profile]
    id: $[count]
    endable: false
    workload: &ycsb !workload
      targets: 
        - *nginx
      functions:
        - !workloadFunction
          values: "100000,500000,1000000,5000000,10000000"
    metric:
      mongodb1 : &slave !virtualMachine
       id: 2
       providerId: us-east-1/i-610ce6e6
       type: *$[profile]
       name: mongodb-config
       scripts:
        start_metric : *start_mongodb_config
        stop_metric : *nada
      mongodb2 : &slave !virtualMachine
       id: 3
       providerId: us-east-1/i-bcb45e3b
       type: *$[profile]
       name: mongodb
       scripts:
        start_metric : *start_mongodb
        stop_metric : *nada
      mongodb3 : &slave !virtualMachine
       id: 4
       providerId: us-east-1/i-cc66b24b
       type: *$[profile]
       name: mongodb
       scripts:
        start_metric : *start_mongodb
        stop_metric : *nada
      mongodb4 : &slave !virtualMachine
       id: 5
       providerId: us-east-1/i-8c7eaa11
       type: *$[profile]
       name: mongodb
       scripts:
        start_metric : *start_mongodb
        stop_metric : *nada