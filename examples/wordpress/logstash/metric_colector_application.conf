input {
  file {
   type => "results"
   path => "/home/ubuntu/logstash_metrics/simulation.log"
   codec => "plain"
   sincedb_path => "/home/ubuntu/.sincedb*"
  }
}
filter {
  if [type] == "results"{

    #grok {
    #  match => [ "message", "ACTION  %{DATA:lixo}   %{NUMBER:scenario}      %{DATA:request}      %{NUMBER:req_ini}   %{NUMBER:req_fim}   %{NUMBER:res_ini}   %{NUMBER:res_fim}   %{USERNAME:status}      %{DATA:error}"]
    #}
    grok {
      match => [ "message", "ACTION\t%{DATA:lixo}\t%{NUMBER:scenario}\t%{DATA:request}\t%{NUMBER:req_ini}\t%{NUMBER:req_fim}\t%{NUMBER:res_ini}\t%{NUMBER:res_fim}\t%{USERNAME:status}\t%{DATA:error}"]
      add_field => ["valid", "true"]
    }
    date{
        match => ["res_ini", "UNIX_MS"]
    }
    mutate {
     convert => [ "req_ini", "integer" ]
     convert => [ "req_fim", "integer" ]
     convert => [ "res_ini", "integer" ]
     convert => [ "res_fim", "integer" ]
    }

    ruby {
      code => "event['response_time'] = event['res_fim'].to_i - event['req_ini'].to_i"
    }
    ruby {
      code => "event['latency'] = event['res_ini'].to_i - event['req_fim'].to_i"
    }

  }
}
output {
  if [valid] == "true"{
    stdout { codec => rubydebug }
    redis { host => "127.0.0.1" data_type => "list" key => "logstash" }
  }
}
