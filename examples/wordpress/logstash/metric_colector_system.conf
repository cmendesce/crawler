input {
    exec {
        type => "system-loadavg"
        command => "cat /proc/loadavg | awk '{print $1,$2,$3}'"
        interval => 30
    }

    exec {
        type => "sar_1_3_cpu"
        command => "sar 1 3 | tail -1 | awk '{print $8}'"
        interval => 10
    }

    exec {
        type => "sar_1_3_memory"
        command => "sar -r 1 3 | tail -1 | awk '{print $2,$3}'"
        interval => 10
    }

    exec {
        type => "sar_1_3_swap"
        command => "sar -S 1 3 | tail -1 | awk '{print $2,$3}'"
        interval => 10
    }

    exec {
        type => "sar_1_3"
        command => "sar -S -r -u 1 3 | tail -8 | awk '{print $2, $3, $8}' | awk '{print}' ORS=',' | sed 's/%//g'"
        interval => 10
    }

}


filter {
  if [type] == "system-loadavg"{
    grok {
      match => [ "message", "%{NUMBER:load_avg_1m} %{NUMBER:load_avg_5m} %{NUMBER:load_avg_15m}" ]
    }
    mutate {
      convert => [ "load_avg_1m", "float" ]
      convert => [ "load_avg_5m", "float" ]
      convert => [ "load_avg_15m", "float" ]
    }
  }

  if [type] == "sar_1_3_cpu"{
   grok {
      match => [ "message", "%{NUMBER:cpuidle}" ]
    }
   mutate {
     convert => [ "cpuidle", "float" ]
   }
   ruby {
     code => "event['cpubusy'] = 100 - event['cpuidle'].to_f"
   }
  }

  if [type] == "sar_1_3_memory"{
   grok {
      match => [ "message", "%{NUMBER:kbmemfree} %{NUMBER:kbmemused}" ]
    }
   mutate {
     convert => [ "kbmemfree", "integer" ]
     convert => [ "kbmemused", "integer" ]
   }
  }

  if [type] == "sar_1_3_swap"{
   grok {
      match => [ "message", "%{NUMBER:kbswpfree} %{NUMBER:kbswpused}" ]
    }
   mutate {
     convert => [ "kbswpfree", "integer" ]
     convert => [ "kbswpused", "integer" ]
   }
  }

  if [type] == "sar_1_3"{
    grok {
      match => [ "message", "CPU user idle,all %{NUMBER:user} %{NUMBER:cpuidle},  ,kbmemfree kbmemused commit,%{NUMBER:kbmemfree} %{NUMBER:kbmemused} %{NUMBER:commit},  ,kbswpfree kbswpused ,%{NUMBER:kbswpfree} %{NUMBER:kbswpused} ," ]
    }
    mutate {
      convert => [ "cpuidle", "float" ]
      convert => [ "kbmemfree", "integer" ]
      convert => [ "kbmemused", "integer" ]
      convert => [ "kbswpfree", "integer" ]
      convert => [ "kbswpused", "integer" ]
    }
    ruby {
     code => "event['cpubusy'] = 100 - event['cpuidle'].to_f"
    }
  }
}

output {
   #stdout { codec => rubydebug }
   redis { host => "127.0.0.1" data_type => "list" key => "logstash" }
}
