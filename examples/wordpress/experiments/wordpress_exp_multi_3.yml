!benchmark
id: 3
name: SimplePost
rounds: 1
endable: true

providers:
#Os provedores de nuvem utilizados
providers:
 - &ec2 !provider
    name: aws-ec2
    credentialPath: AwsCredentials.properties

#tipos de instancia oferecidas pelo provedores de nuvem
virtualMachineTypes:    
 - &m1_small !virtualMachineType
    providerProfile: m1.small
    provider: *ec2
 - &c3_large !virtualMachineType
    providerProfile: c3.large
    provider: *ec2
    properties:
      ServerLimit : 300
      StartServers : 201
 - &c3_xlarge !virtualMachineType
    providerProfile: c3.xlarge
    provider: *ec2
    properties:
      ServerLimit : 550
      StartServers : 450
 - &c3_2xlarge !virtualMachineType
    providerProfile: c3.2xlarge
    provider: *ec2
    properties:
      ServerLimit : 800
      StartServers : 700
 - &m3_large !virtualMachineType
    providerProfile: m3.large
    provider: *ec2
 - &m3_xlarge !virtualMachineType
    providerProfile: m3.xlarge
    provider: *ec2
 - &m3_2xlarge !virtualMachineType
    providerProfile: m3.2xlarge
    provider: *ec2

properties:
   chef_script_wordpress : 
    &chef_script_wordpress !scriptlet
     scripts:
      - "knife ec2 server create --availability-zone us-east-1a --node-name ${name} --flavor ${type.providerProfile} --image ${image} --run-list \"role[wordpress-role]\" --ssh-user ${type.provider.userName} --ssh-key chef  --identity-file chef.pem  -c knife.rb"
   test_parser : 
    &test_parser !scriptlet
     scripts:
      - "echo '${scenarioScope.virtualMachines(wordpress).privateIpAddress}'>> /tmp/testip"
   start_apache :
    &start_apache !scriptlet
     scripts :
      - "sudo sed -i 's;^       StartServers.*;       StartServers       ${type.properties(StartServers)};g' /etc/apache2/mods-available/mpm_prefork.conf"
      - "sudo sed -i 's;^       ServerLimit.*;       ServerLimit       ${type.properties(ServerLimit)};g' /etc/apache2/mods-available/mpm_prefork.conf"
      - "sudo sed -i 's;^       MaxRequestWorkers.*;       MaxRequestWorkers       ${type.properties(ServerLimit)};g' /etc/apache2/mods-available/mpm_prefork.conf"
      - "~/change_database.sh ${scenarioScope.metric(mysql).privateIpAddress}"
      - "~/configHost.sh ${scenarioScope.metric(nginx).privateIpAddress}"
      - 'sed -i "s;\(host => \"[^\"]*\);host => \"${scenarioScope.virtualMachines(crawler).privateIpAddress};g" /home/ubuntu/logstash_metrics/indexer.conf'
  
virtualMachines:
 - &gatling !virtualMachine
   id: 1
   providerId: us-east-1/i-0f577d5c
   type: *m3_xlarge
   name: gatling
   scripts:    
    submit_workload : !scriptlet
      scripts:
       - 'sed -i "s;\(host => \"[^\"]*\);host => \"${scenarioScope.virtualMachines(crawler).privateIpAddress};g" /home/ubuntu/logstash_metrics/metric_colector_application.conf'
       - "~/execution.sh ${scenarioScope.metric(nginx).privateIpAddress} ${scenarioScope.name}"
 - &crawler !virtualMachine
   id: 2
   providerId: us-east-1/i-f9abd6d7
   type: *c3_large
   name: crawler
   scripts:
    start_metric : *test_parser
 - &mysql !virtualMachine
   id: 3
   providerId: us-east-1/i-0dfb042c
   type: *m3_2xlarge
   name: mysql
   scripts:
    start_metric : 
      !scriptlet
         scripts:
          - 'sed -i "s;\(host => \"[^\"]*\);host => \"${scenarioScope.virtualMachines(crawler).privateIpAddress};g" /home/ubuntu/logstash_metrics/indexer.conf'
          - "~/clear_db.sh"
          - "~/configMetric.sh ${scenarioScope.name}"
          - "sudo service mysql restart"
    stop_metric : 
      !scriptlet
         scripts:
           - "sudo service logstash-indexer stop"
 - &nginx !virtualMachine
   id: 4
   providerId: us-east-1/i-3cf6091d
   type: *c3_large
   name: nginx
   scripts:
   scripts:
    start_metric : 
      !scriptlet
         scripts:
          - 'sed -i "s;\(host => \"[^\"]*\);host => \"${scenarioScope.virtualMachines(crawler).privateIpAddress};g" /home/ubuntu/logstash_metrics/indexer.conf'
          - "~/configNginx.sh 3 ${scenarioScope.metric(wordpress).privateIpAddress} ${scenarioScope.metric(wordpress2).privateIpAddress} ${scenarioScope.metric(wordpress3).privateIpAddress}"
          - "sudo service nginx restart"
          - "~/configMetric.sh ${scenarioScope.name}"
    stop_metric : 
      !scriptlet
         scripts:
           - "sudo service logstash-indexer stop"

scenarios:
  - !scenario
    name: 3_c3_large
    id: 1
    endable: false
    workload: !workload
     targets:
      - *gatling
     functions:
      - !workloadFunction
       values: "100,200,300,400,500,600,700,800,900,1000,2000"
    metric:
      nginx : *nginx
      mysql : *mysql
      wordpress : &wordpress !virtualMachine
        id: 5
        providerId: us-east-1/i-cffa379f
        type: *c3_large
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
      wordpress2 : &wordpress !virtualMachine
        id: 6
        providerId: us-east-1/i-eb24e9bb
        type: *c3_large
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
      wordpress3 : &wordpress !virtualMachine
        id: 7
        providerId: us-east-1/i-8077bad0
        type: *c3_large
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
    virtualMachines:
      crawler : *crawler
      mysql : *mysql
      nginx : *nginx
      gatling : *gatling
  - !scenario
    name: 3_c3_xlarge
    id: 1
    endable: false
    workload: !workload
     targets:
      - *gatling
     functions:
      - !workloadFunction
       values: "100,200,300,400,500,600,700,800,900,1000,2000"
    metric:
      nginx : *nginx
      mysql : *mysql
      wordpress : &wordpress !virtualMachine
        id: 5
        providerId: us-east-1/i-cffa379f
        type: *c3_xlarge
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
      wordpress2 : &wordpress !virtualMachine
        id: 6
        providerId: us-east-1/i-eb24e9bb
        type: *c3_xlarge
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
      wordpress3 : &wordpress !virtualMachine
        id: 7
        providerId: us-east-1/i-8077bad0
        type: *c3_xlarge
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
    virtualMachines:
      crawler : *crawler
      mysql : *mysql
      nginx : *nginx
      gatling : *gatling
  - !scenario
    name: 3_c3_2xlarge
    id: 1
    endable: true
    workload: !workload
     targets:
      - *gatling
     functions:
      - !workloadFunction
       values: "100,200,300,400,500,600,700,800,900,1000,2000"
    metric:
      nginx : *nginx
      mysql : *mysql
      wordpress : &wordpress !virtualMachine
        id: 5
        providerId: us-east-1/i-cffa379f
        type: *c3_2xlarge
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
      wordpress2 : &wordpress !virtualMachine
        id: 6
        providerId: us-east-1/i-eb24e9bb
        type: *c3_2xlarge
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
      wordpress3 : &wordpress !virtualMachine
        id: 7
        providerId: us-east-1/i-8077bad0
        type: *c3_2xlarge
        name: wordpress        
        scripts:
          start_vm : *start_apache
          start_metric : 
            !scriptlet
              scripts:
               - "~/configMetric.sh ${scenarioScope.name}"
               - "sudo service apache2 restart"
          stop_metric : 
            !scriptlet
              scripts:
                - "sudo service logstash-indexer stop"
    virtualMachines:
      crawler : *crawler
      mysql : *mysql
      nginx : *nginx
      gatling : *gatling